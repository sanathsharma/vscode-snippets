{
    "mongoose model": {
        "scope": "typescript",
        "prefix": "mongoose:model",
        "body": [
            "import { Schema, model, Document, Model } from 'mongoose';",
            "",
            "// attributes needed to create",
            "export interface $1Attrs {}",
            "",
            "// properties on document",
            "export interface $1Document extends Document {",
            "    updatedAt: string;",
            "    createdAt: string;",
            "}",
            "",
            "// properties on model",
            "export interface $1Modal extends Model<$1Document> {",
            "    build ( attrs: $1Attrs ): $1Document;",
            "}",
            "",
            "// schema",
            "const $1Schema: Schema = new Schema( {",
            "}, {",
            "    toJSON: {",
            "        versionKey: false,",
            "        transform ( doc, ret, options ) {",
            "            ret.id = ret._id;",
            "            delete ret._id;",
            "        }",
            "    }",
            "}  );",
            "",
            "// method to create instance ( \"save\" has to be called on the instance to create a document in db )",
            "$1Schema.statics.build = ( attrs: $1Attrs ) => {",
            "    return new $1( attrs );",
            "};",
            "",
            "// model",
            "const $1 = model<$1Document, $1Modal>( '$1', $1Schema );",
            "",
            "export default $1;"
        ]
    }
}