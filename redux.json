{
    "Redux Reducer JS": {
        "scope": "javascript,javascriptreact",
        "prefix": "redux:reducer-js,jsx",
        "body": [
            "import { createReducer } from '@reduxjs/toolkit';",
            "",
            "const initialState = {};",
            "",
            "const $1 = createReducer( initialState, {} );",
            "",
            "export {",
            "    $1,",
            "    initialState as $1Init",
            "}"
        ]
    },
    "Redux Reducer TS": {
        "scope": "typescriptreact",
        "prefix": "redux:reducer-tsx",
        "body": [
            "import { createReducer } from '@reduxjs/toolkit';",
            "",
            "interface I$1 {}",
            "",
            "const initialState: I$1 = {};",
            "",
            "const $1 = createReducer( initialState, {} );",
            "",
            "export {",
            "    $1,",
            "    initialState as $1Init",
            "}"
        ]
    },
    "Redux Simple Reducer JS": {
        "scope": "javascript,javascriptreact",
        "prefix": "redux:simple-reducer-js,jsx",
        "body": [
            "const initialState = {};",
            "",
            "const $1 = (state=initialState,action)=>{",
            "    switch (action.type) {",
            "        default:",
            "            return state;",
            "    }",
            "}",
            "",
            "export {",
            "    $1,",
            "    initialState as $1Init",
            "}"
        ]
    },
    "Redux Simple Reducer TS": {
        "scope": "typescriptreact",
        "prefix": "redux:simple-reducer-tsx",
        "body": [
            "import { AnyAction } from 'redux';",
            "",
            "interface I$1 {}",
            "",
            "const initialState:  I$1 = {};",
            "",
            "const $1 = ( state = initialState, action: AnyAction ): I$1 => {",
            "    switch (action.type) {",
            "        default:",
            "            return state;",
            "    }",
            "}",
            "",
            "export {",
            "    $1,",
            "    initialState as $1Init",
            "}"
        ]
    },
    "Redux Thunk Action": {
        "scope": "typescriptreact",
        "prefix": "redux:thunk-action",
        "body": [
            "export const $1 = () => ( dispatch: Function, _getState: () => void,{$2}: Services ) => {",
            "    apiRequest( {",
            "        method: $3,",
            "        args: {$4},",
            "        onSuccess: ( data ) => {$5},",
            "        onError: ( e ) => {",
            "            console.log( 'e', e );",
            "        }",
            "    } );",
            "};"
        ]
    }
}