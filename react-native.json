{
    "React Native Import": {
        "scope": "typescriptreact",
        "prefix": "rn:import",
        "body": "import { $1 } from 'react-native'"
    },
    "Expo Font fetcher": {
        "scope": "typescriptreact",
        "prefix": "expo:font-fetch",
        "body": [
            "import * as Font from 'expo-font';",
            "import { AppLoading } from 'expo';",
            "",
            "// --------- outside the component -------",
            "const fetchFonts = () => {",
            "    return Font.loadAsync( {",
            "        'lato': require( './assets/fonts/Lato-Regular.ttf' ),",
            "        'lato-bold': require( './assets/fonts/Lato-Bold.ttf' )",
            "    } );",
            "};",
            "",
            "// --------- inside the component -------",
            "const [dataLoaded, setDataLoaded] = useState( false );",
            "",
            "if ( !dataLoaded )",
            "    return <AppLoading",
            "        startAsync={ fetchFonts }",
            "        onFinish={ () => setDataLoaded( true ) }",
            "        onError={ ( e ) => console.log( e ) }",
            "    />;"
        ]
    },
    "Expo import Fonts from various ui libraries": {
        "scope": "typescriptreact",
        "prefix": "expo:import-fonts",
        "body": "import { $1 } from '@expo/vector-icons';"
    },
    "React Native Functional Component": {
        "scope": "typescriptreact",
        "prefix": "rn:fc",
        "body": [
            "import React from 'react';",
            "import { View, Text, StyleSheet} from 'react-native';",
            "",
            "interface I${TM_FILENAME_BASE} {}",
            "",
            "const ${TM_FILENAME_BASE}:React.FC<I${TM_FILENAME_BASE}> = () => {",
            "    return (",
            "        <View style={ styles.screen }>",
            "            <Text>${TM_FILENAME_BASE}</Text>",
            "        </View>",
            "    );",
            "};",
            "",
            "const styles = StyleSheet.create( {",
            "    screen: {",
            "        flexGrow: 1,",
            "        justifyContent: 'center',",
            "        alignItems: 'center',",
            "    }",
            "} );",
            "",
            "export default ${TM_FILENAME_BASE};"
        ]
    },
    "React Navigation Root Stack Navigator": {
        "scope": "typescriptreact",
        "prefix": "rnav:root-stack-navigator",
        "body": [
            "import React from 'react';",
            "import { createStackNavigator } from '@react-navigation/stack';",
            "import { NavigationContainer } from '@react-navigation/native';",
            "",
            "//screens",
            "import SomeScreen from '../screens/SomeScreen';",
            "",
            "export type RootStackParamList = {",
            "    ScreenName: undefined",
            "};",
            "",
            "const Stack = createStackNavigator<RootStackParamList>();",
            "",
            "interface I${TM_FILENAME_BASE} {}",
            "",
            "const ${TM_FILENAME_BASE}: React.FC<I${TM_FILENAME_BASE}> = () => {",
            "    return (",
            "        <NavigationContainer>",
            "            <Stack.Navigator",
            "                initialRouteName=\"ScreenName\"",
            "                screenOptions={{}}",
            "            >",
            "                <Stack.Screen name=\"ScreenName\" component={ SomeScreen } options={{ title: \"Some Name\" }}/>",
            "            </Stack.Navigator>",
            "        </NavigationContainer>",
            "    );",
            "};",
            "",
            "export default ${TM_FILENAME_BASE};"
        ]
    },
    "React Navigation Stack Navigator": {
        "scope": "typescriptreact",
        "prefix": "rnav:stack-navigator",
        "body": [
            "import React from 'react';",
            "import { createStackNavigator } from '@react-navigation/stack';",
            "",
            "//screens",
            "import SomeScreen from '../screens/SomeScreen';",
            "",
            "export type $1StackParamList = {",
            "    ScreenName: undefined",
            "};",
            "",
            "const Stack = createStackNavigator<$1StackParamList>();",
            "",
            "interface I${TM_FILENAME_BASE} {}",
            "",
            "const ${TM_FILENAME_BASE}: React.FC<I${TM_FILENAME_BASE}> = () => {",
            "    return (",
            "        <Stack.Navigator",
            "            initialRouteName=\"ScreenName\"",
            "            screenOptions={{}}",
            "        >",
            "            <Stack.Screen name=\"ScreenName\" component={ SomeScreen } options={{ title: \"Some Name\" }}/>",
            "        </Stack.Navigator>",
            "    );",
            "};",
            "",
            "export default ${TM_FILENAME_BASE};"
        ]
    },
    "React Navigation Root Bottom Tab Navigator": {
        "scope": "typescriptreact",
        "prefix": "rnav:root-bottom-tab-navigator",
        "body": [
            "import React from 'react';",
            "import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';",
            "import { NavigationContainer } from '@react-navigation/native';",
            "",
            "//screens",
            "import SomeScreen from '../screens/SomeScreen';",
            "",
            "export type RootTabParamsList = {",
            "    ScreenName: undefined",
            "};",
            "",
            "const Tab = createBottomTabNavigator<RootTabParamsList>();",
            "",
            "interface I${TM_FILENAME_BASE} {}",
            "",
            "const ${TM_FILENAME_BASE}: React.FC<I${TM_FILENAME_BASE}> = () => {",
            "    return (",
            "        <NavigationContainer>",
            "            <Tab.Navigator",
            "                initialRouteName=\"ScreenName\"",
            "                screenOptions={{}}",
            "                tabBarOptions={{}}",
            "            >",
            "                <Tab.Screen name=\"ScreenName\" component={ SomeScreen } options={{ title: \"Some Name\" }}/>",
            "            </Tab.Navigator>",
            "        </NavigationContainer>",
            "    );",
            "};",
            "",
            "export default ${TM_FILENAME_BASE};"
        ]
    },
    "React Navigation Bottom Tab Navigator": {
        "scope": "typescriptreact",
        "prefix": "rnav:bottom-tab-navigator",
        "body": [
            "import React from 'react';",
            "import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';",
            "",
            "//screens",
            "import SomeScreen from '../screens/SomeScreen';",
            "",
            "export type $1TabParamsList = {",
            "    ScreenName: undefined",
            "};",
            "",
            "const Tab = createBottomTabNavigator<$1TabParamsList>();",
            "",
            "interface I${TM_FILENAME_BASE} {}",
            "",
            "const ${TM_FILENAME_BASE}: React.FC<I${TM_FILENAME_BASE}> = () => {",
            "    return (",
            "        <Tab.Navigator",
            "            initialRouteName=\"ScreenName\"",
            "            screenOptions={{}}",
            "            tabBarOptions={{}}",
            "        >",
            "            <Tab.Screen name=\"ScreenName\" component={ SomeScreen } options={{ title: \"Some Name\" }}/>",
            "        </Tab.Navigator>",
            "    );",
            "};",
            "",
            "export default ${TM_FILENAME_BASE};"
        ]
    },
    "React Navigation Root Drawer Navigator": {
        "scope": "typescriptreact",
        "prefix": "rnav:root-drawer-navigator",
        "body": [
            "import React from 'react';",
            "import { createDrawerNavigator } from '@react-navigation/drawer'",
            "import { NavigationContainer } from '@react-navigation/native';",
            "",
            "//screens",
            "import SomeScreen from '../screens/SomeScreen';",
            "",
            "export type RootDrawerParamsList = {",
            "    ScreenName: undefined",
            "};",
            "",
            "const Drawer = createDrawerNavigator<RootDrawerParamsList>();",
            "",
            "interface I${TM_FILENAME_BASE} {}",
            "",
            "const ${TM_FILENAME_BASE}: React.FC<I${TM_FILENAME_BASE}> = () => {",
            "    return (",
            "        <NavigationContainer>",
            "            <Drawer.Navigator",
            "                initialRouteName=\"ScreenName\"",
            "                screenOptions={{}}",
            "                drawerContentOptions={{}}",
            "            >",
            "                <Drawer.Screen name=\"ScreenName\" component={ SomeScreen } options={{ title: \"Some Name\" }}/>",
            "            </Drawer.Navigator>",
            "        </NavigationContainer>",
            "    );",
            "};",
            "",
            "export default ${TM_FILENAME_BASE};"
        ]
    },
    "React Navigation Drawer Navigator": {
        "scope": "typescriptreact",
        "prefix": "rnav:drawer-navigator",
        "body": [
            "import React from 'react';",
            "import { createDrawerNavigator } from '@react-navigation/drawer'",
            "",
            "//screens",
            "import SomeScreen from '../screens/SomeScreen';",
            "",
            "export type $1DrawerParamsList = {",
            "    ScreenName: undefined",
            "};",
            "",
            "const Drawer = createDrawerNavigator<$1DrawerParamsList>();",
            "",
            "interface I${TM_FILENAME_BASE} {}",
            "",
            "const ${TM_FILENAME_BASE}: React.FC<I${TM_FILENAME_BASE}> = () => {",
            "    return (",
            "        <Drawer.Navigator",
            "            initialRouteName=\"ScreenName\"",
            "            screenOptions={{}}",
            "            drawerContentOptions={{}}",
            "        >",
            "            <Drawer.Screen name=\"ScreenName\" component={ SomeScreen } options={{ title: \"Some Name\" }}/>",
            "        </Drawer.Navigator>",
            "    );",
            "};",
            "",
            "export default ${TM_FILENAME_BASE};"
        ]
    },
    "React Native Custom Header Button": {
        "scope": "typescriptreact",
        "prefix": "rn:custom-header-btn",
        "body": [
            "import React from 'react';import { StyleSheet} from 'react-native';",
            "import { HeaderButton, HeaderButtonProps} from 'react-navigation-header-buttons';",
            "import { Ionicons} from '@expo/vector-icons';",
            "",
            "interface ICustomHeaderButton extends HeaderButtonProps {}",
            "",
            "const CustomHeaderButton: React.FC<ICustomHeaderButton> = ( props ) => {",
            "    return (",
            "        <HeaderButton",
            "            IconComponent={ Ionicons }",
            "            iconSize={ 23 }",
            "            color=\"white\"",
            "            { ...props}",
            "        />",
            "    );",
            "};",
            "",
            "const styles = StyleSheet.create( {",
            "    screen: {",
            "        flexGrow: 1,",
            "        justifyContent: 'center',",
            "        alignItems: 'center',",
            "    }",
            "} );",
            "",
            "export default CustomHeaderButton;"
        ]
    }
}